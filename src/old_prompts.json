{
  "queryEngine": "\nFollowing is the rest api documentation\n# Method: places.searchNearby\n\nSearch for places near locations.\n\n### HTTP request\n\n`POST https://places.googleapis.com/v1/places:searchNearby`\n\nThe URL uses [gRPC Transcoding](https://google.aip.dev/127) syntax.\n\n### Request body\n\nThe request body contains data with the following structure:\n```json\n{\n  \"languageCode\": string,\n  \"regionCode\": string,\n  \"includedTypes\": [\n    string\n  ],\n  \"excludedTypes\": [\n    string\n  ],\n  \"includedPrimaryTypes\": [\n    string\n  ],\n  \"excludedPrimaryTypes\": [\n    string\n  ],\n  \"maxResultCount\": integer,\n  \"locationRestriction\": {\n    object LocationRestriction\n  },\n  \"rankPreference\": enum RankPreference\n}\n```\n \n| Fields                   ||\n| ------------------------ ||\n| `languageCode`           | `string`<br><br>Place details will be displayed with the preferred language if available. If the language code is unspecified or unrecognized, place details of any language may be returned, with a preference for English if such details exist.<br><br>Current list of supported languages: [https://developers.google.com/maps/faq#languagesupport](https://developers.google.com/maps/faq#languagesupport|\n| `regionCode`             | `string`<br><br>The Unicode country/region code (CLDR) of the location where the request is coming from. This parameter is used to display the place details, like region-specific place name, if available. The parameter can affect results based on applicable law.<br><br>For more information, see [https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html](https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html).<br><br>Note that 3-digit region codes are not currently supported|\n| `includedTypes[]`        | `string`<br><br>Included Place type (eg, \"restaurant\" or \"gas_station\") from [https://developers.google.com/maps/documentation/places/web-service/place-types](https://developers.google.com/maps/documentation/places/web-service/place-types).<br><br>Up to 50 types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) may be specified.<br><br>If there are any conflicting types, i.e. a type appears in both includedTypes and excludedTypes, an INVALID_ARGUMENT error is returned.<br><br>If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {includedTypes = [\"restaurant\"], excludedPrimaryTypes = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\".                                                                                                                                                                                                                                                                                      |\n| `excludedTypes[]`        | `string`<br><br>Excluded Place type (eg, \"restaurant\" or \"gas_station\") from [https://developers.google.com/maps/documentation/places/web-service/place-types](https://developers.google.com/maps/documentation/places/web-service/place-types).<br><br>Up to 50 types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) may be specified.<br><br>If the client provides both includedTypes (e.g. restaurant) and excludedTypes (e.g. cafe), then the response should include places that are restaurant but not cafe. The response includes places that match at least one of the includedTypes and none of the excludedTypes.<br><br>If there are any conflicting types, i.e. a type appears in both includedTypes and excludedTypes, an INVALID_ARGUMENT error is returned.<br><br>If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {includedTypes = [\"restaurant\"], excludedPrimaryTypes = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\". |\n| `includedPrimaryTypes[]` | `string`<br><br>Included primary Place type (e.g. \"restaurant\" or \"gas_station\") from [https://developers.google.com/maps/documentation/places/web-service/place-types](https://developers.google.com/maps/documentation/places/web-service/place-types). A place can only have a single primary type from the supported types table associated with it.<br><br>Up to 50 types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) may be specified.<br><br>If there are any conflicting primary types, i.e. a type appears in both includedPrimaryTypes and excludedPrimaryTypes, an INVALID_ARGUMENT error is returned.<br><br>If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {includedTypes = [\"restaurant\"], excludedPrimaryTypes = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\".                                                                                                                                                        |\n| `excludedPrimaryTypes[]` | `string`<br><br>Excluded primary Place type (e.g. \"restaurant\" or \"gas_station\") from [https://developers.google.com/maps/documentation/places/web-service/place-types](https://developers.google.com/maps/documentation/places/web-service/place-types).<br><br>Up to 50 types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) may be specified.<br><br>If there are any conflicting primary types, i.e. a type appears in both includedPrimaryTypes and excludedPrimaryTypes, an INVALID_ARGUMENT error is returned.<br><br>If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {includedTypes = [\"restaurant\"], excludedPrimaryTypes = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\".                                                                                                                                                                                                                                                       |\n| `maxResultCount`         | `integer`<br><br>Maximum number of results to return. It must be between 1 and 20 (default), inclusively. If the number is unset, it falls back to the upper limit. If the number is set to negative or exceeds the upper limit, an INVALID_ARGUMENT error is returned|\n| `locationRestriction`    | ``object (`[LocationRestriction](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places/searchNearby#LocationRestriction)`)``<br><br>Required. The region to search|\n| `rankPreference`         | ``enum (`[RankPreference](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places/searchNearby#RankPreference)`)``<br><br>How results will be ranked in the response|\n\n### Response body\n\nResponse proto for Search Nearby.\n\nIf successful, the response body contains data with the following structure:\n```json\n{\n  \"places\": [\n    {\n      object Place\n    }\n  ]\n}\n```\n \n|Fields|   |\n|---|---|\n|`places[]`|``object (`[Place](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places#Place)`)``<br><br>A list of places that meets user's requirements like places types, number of places and specific location restriction.|\n\n## LocationRestriction\n\nThe region to search.\n```json\n{\n\n  // Union field `type` can be only one of the following:\n  \"circle\": {\n    object Circle\n  }\n  // End of list of possible types for union field `type`.\n}\n```\n \n|Fields|   |\n|---|---|\n|Union field `type`.<br><br>`type` can be only one of the following:|   |\n|`circle`|``object (`[Circle](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/Circle)`)``<br><br>A circle defined by center point and radius.|\n\n## RankPreference\n\nHow results will be ranked in the response.\n\n \n| Enums                         |                                                                       |\n| ----------------------------- | --------------------------------------------------------------------- |\n| `RANK_PREFERENCE_UNSPECIFIED` | RankPreference value not set. Will use rank by POPULARITY by default. |\n| `DISTANCE`                    | Ranks results by distance.                                            |\n| `POPULARITY`                  | Ranks results by popularity.                                          |\n|                               |                                                                       |\n\n\nFollowing is general documentation on how to use nearby search\n\nA [Nearby Search (New)](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places/searchNearby) request takes one or more place types, and returns a list of matching places within the specified area. A field mask specifying one or more data types is required. Nearby Search (New) only supports POST requests.\n\nThe API Explorer lets you make live requests so that you can get familiar with the API and the API options:\n\n[Try it!](https://developers.google.com/maps/documentation/places/web-service/nearby-search#try-it)\n\nTry the [interactive demo](https://places-search-405409.ue.r.appspot.com/) to see Nearby Search (New) results displayed on a map.\n\n## Nearby Search (New) requests\n\nA Nearby Search (New) request is an HTTP POST request to a URL in the form:\n\nhttps://places.googleapis.com/v1/places:searchNearby  \n\nPass all parameters in the JSON request body or in headers as part of the POST request. For example:\n\ncurl -X POST -d **'{\n  \"includedTypes\": [\"restaurant\"],\n  \"maxResultCount\": 10,\n  \"locationRestriction\": {\n    \"circle\": {\n      \"center\": {\n        \"latitude\": 37.7937,\n        \"longitude\": -122.3965},\n      \"radius\": 500.0\n    }\n  }\n}'** -H 'Content-Type: application/json' -H \"X-Goog-Api-Key: API_KEY\n\n\" -H \"X-Goog-FieldMask: places.displayName\" https://places.googleapis.com/v1/places:searchNearby\n\n## Nearby Search (New) responses\n\nNearby Search (New) returns a [JSON object as a response](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places/searchNearby#response-body). In the response:\n\n- The `places` array contains all matching places.\n- Each place in the array is represented by a [`Place`](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places) object. The `Place` object contains detailed information about a single place.\n- The [FieldMask](https://developers.google.com/maps/documentation/places/web-service/nearby-search#fieldmask) passed in the request specifies the list of fields returned in the `Place` object.\n\nThe complete JSON object is in the form:\n\n{\u00a0 \"places\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 object (Place)\u00a0 \u00a0 }\u00a0 ]  \n}  \n\n## Required parameters\n\n- ### FieldMask\n    \n\nSpecify the list of fields to return in the response by creating a [response field mask](https://developers.google.com/maps/documentation/places/web-service/choose-fields). Pass the response field mask to the method by using the URL parameter `$fields` or `fields`, or by using the HTTP header `X-Goog-FieldMask`. There is no default list of returned fields in the response. If you omit the field mask, the method returns an error.\n\nField masking is a good design practice to ensure that you don't request unnecessary data, which helps to avoid unnecessary processing time and billing charges.\n\nSpecify a comma-separated list of place data types to return. For example, to retrieve the display name and the address of the place.\n\nX-Goog-FieldMask: places.displayName,places.formattedAddress\n\n**Note:** Spaces are not allowed anywhere in the field list.\n\nUse `*` to retrieve all fields.\n\n- X-Goog-FieldMask: *\n    \n    Wildcard \"*\" selects all fields. However, while that wildcard is fine to use in development, Google discourage the use of the wildcard (*) response field mask in production because of the large amount of data that can be returned.\n    \n    Further guidance for using `places.iconMaskBaseUri` and `places.iconBackgroundColor` can be found in [Place Icons](https://developers.google.com/maps/documentation/places/web-service/icons) section.\n    \n    Specify one or more of the following fields:\n    \n    - The following fields trigger the [Nearby Search (Basic) SKU](https://developers.google.com/maps/documentation/places/web-service/usage-and-billing#basic-nearbysearch):\n        \n        `places.accessibilityOptions`, `places.addressComponents`, `places.adrFormatAddress`, `places.attributions`, `places.businessStatus`, `places.displayName`, `places.formattedAddress`, `places.googleMapsUri`, `places.iconBackgroundColor`, `places.iconMaskBaseUri`, `places.id`, `places.location`, `places.name`*, `places.photos`, `places.plusCode`, `places.primaryType`, `places.primaryTypeDisplayName`, `places.shortFormattedAddress`, `places.subDestinations`, `places.types`, `places.utcOffsetMinutes`, `places.viewport`  \n          \n        * The `places.name` field contains the place _resource name_ in the form: `places/PLACE_ID`. Use `places.displayName` to access the text name of the place.\n        \n    - The following fields trigger the [Nearby Search (Advanced) SKU](https://developers.google.com/maps/documentation/places/web-service/usage-and-billing#advanced-nearbysearch):\n        \n        `places.currentOpeningHours`, `places.currentSecondaryOpeningHours`, `places.internationalPhoneNumber`, `places.nationalPhoneNumber`, `places.priceLevel`, `places.rating`, `places.regularOpeningHours`, `places.regularSecondaryOpeningHours`, `places.userRatingCount`, `places.websiteUri`\n        \n    - The following fields trigger the [Nearby Search (Preferred) SKU](https://developers.google.com/maps/documentation/places/web-service/usage-and-billing#preferred-nearbysearch):\n        \n        `places.allowsDogs`, `places.curbsidePickup`, `places.delivery`, `places.dineIn`, `places.editorialSummary`, `places.evChargeOptions`, `places.fuelOptions`, `places.goodForChildren`, `places.goodForGroups`, `places.goodForWatchingSports`, `places.liveMusic`, `places.menuForChildren`, `places.parkingOptions`, `places.paymentOptions`, `places.outdoorSeating`, `places.reservable`, `places.restroom`, `places.reviews`, `places.servesBeer`, `places.servesBreakfast`, `places.servesBrunch`, `places.servesCocktails`, `places.servesCoffee`, `places.servesDesserts`, `places.servesDinner`, `places.servesLunch`, `places.servesVegetarianFood`, `places.servesWine`, `places.takeout`  \n        \n- ### locationRestriction\n    \n\nThe region to search specified as a circle, defined by center point and radius in meters. The radius must be between 0.0 and 50000.0, inclusive. The default radius is 0.0. You must set it in your request to a value greater than 0.0.\n\nFor example:\n\n- \"locationRestriction\": {\u00a0 \"circle\": {\u00a0 \u00a0 \"center\": {\u00a0 \u00a0 \u00a0 \"latitude\": 37.7937,\u00a0 \u00a0 \u00a0 \"longitude\": -122.3965\u00a0 \u00a0 },\u00a0 \u00a0 \"radius\": 500.0\u00a0 }  \n    }\n    \n\n## Optional parameters\n\n- ### includedTypes/excludedTypes, includedPrimaryTypes/excludedPrimaryTypes\n    \n\nLets you specify a list of types from types [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) used to filter the search results. Up to 50 types can be specified in each type restriction category.\n\n**Note:** The values in [Table B](https://developers.google.com/maps/documentation/places/web-service/place-types#table-b) are only returned in the response. You cannot use values in [Table B](https://developers.google.com/maps/documentation/places/web-service/place-types#table-b) as a filter.\n\nA place can only have a **single primary type** from types [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) associated with it. For example, the primary type might be `\"mexican_restaurant\"` or `\"steak_house\"`. Use `includedPrimaryTypes` and `excludedPrimaryTypes` to filter the results on a place's primary type.\n\nA place can also have **multiple type values** from types [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) associated with it. For example a restaurant might have the following types: `\"seafood_restaurant\"`, `\"restaurant\"`, `\"food\"`, `\"point_of_interest\"`, `\"establishment\"`. Use `includedTypes` and `excludedTypes` to filter the results on the list of types associated with a place.\n\nIf a search is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if you specify `{\"includedTypes\": [\"restaurant\"], \"excludedPrimaryTypes\": [\"steak_house\"]}`, the returned places provide `\"restaurant\"` related services but do not operate primarily as a `\"steak_house\"`.\n\nIf you omit `includedTypes`, `excludedTypes`, `includedPrimaryTypes`, and `excludedPrimaryTypes` from the request, the search returns places for all types from within the location restriction bounds.\n\n#### includedTypes\n\nA comma-separated list of the place types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) to search for. If this parameter is omitted, places of all types are returned.\n\n#### excludedTypes\n\nA comma-separated list of place types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) to exclude from a search.\n\nIf you specify both the `includedTypes` ( such as `\"school\"`) and the `excludedTypes` (such as `\"primary_school\"`) in the request, then the response includes places that are categorized as `\"school\"` but not as `\"primary_school\"`. The response includes places that match **at least one** of the `includedTypes` and **none of** the `excludedTypes`.\n\nIf there are any conflicting types, such as a type appearing in both `includedTypes` and `excludedTypes`, an `INVALID_REQUEST` error is returned.\n\n#### includedPrimaryTypes\n\nA comma-separated list of primary place types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) to include in a search.\n\n#### excludedPrimaryTypes\n\n- A comma-separated list of primary place types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) to exclude from a search.\n    \n    If there are any conflicting primary types, such as a type appearing in both `includedPrimaryTypes` and `excludedPrimaryTypes`, an `INVALID_ARGUMENT` error is returned.\n    \n- ### languageCode\n    \n- The language in which to return results.\n    \n    - See the list of [supported languages](https://developers.google.com/maps/faq#languagesupport). Google often updates the supported languages, so this list may not be exhaustive.\n    - If `languageCode` is not supplied, the API defaults to `en`. If you specify an invalid language code, the API returns an `INVALID_ARGUMENT` error.\n    - The API does its best to provide a street address that is readable for both the user and locals. To achieve that goal, it returns street addresses in the local language, transliterated to a script readable by the user if necessary, observing the preferred language. All other addresses are returned in the preferred language. Address components are all returned in the same language, which is chosen from the first component.\n    - If a name is not available in the preferred language, the API uses the closest match.\n    - The preferred language has a small influence on the set of results that the API chooses to return, and the order in which they are returned. The geocoder interprets abbreviations differently depending on language, such as the abbreviations for street types, or synonyms that may be valid in one language but not in another.\n- ### maxResultCount\n    \n- Specifies the maximum number of place results to return. Must be between 1 and 20 (default) inclusive.\n    \n- ### rankPreference\n    \n- The type of ranking to use. If this parameter is omitted, results are ranked by popularity. May be one of the following:\n    \n    - `POPULARITY` (default) Sorts results based on their popularity.\n    - `DISTANCE` Sorts results in ascending order by their distance from the specified location.\n- ### regionCode\n    \n\n- The region code used to format the response, specified as a [two-character CLDR code](https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html) value. There is no default value.\n    \n    If the country name of the `formattedAddress` field in the response matches the `regionCode`, the country code is omitted from `formattedAddress`. This parameter has no effect on `adrFormatAddress`, which always includes the country name, or on `shortFormattedAddress`, which never includes it.\n    \n    Most CLDR codes are identical to ISO 3166-1 codes, with some notable exceptions. For example, the United Kingdom's ccTLD is \"uk\" (.co.uk) while its ISO 3166-1 code is \"gb\" (technically for the entity of \"The United Kingdom of Great Britain and Northern Ireland\"). The parameter can affect results based on applicable law.\n    \n\n## Nearby Search (New) examples\n\n### Find places of one type\n\nThe following example shows a Nearby Search (New) request for the display names of all restaurants within a 500-meter radius, defined by `circle`:\n\ncurl -X POST -d '{\n  \"includedTypes\": [\"restaurant\"],\n  \"maxResultCount\": 10,\n  \"locationRestriction\": {\n    \"circle\": {\n      \"center\": {\n        \"latitude\": 37.7937,\n        \"longitude\": -122.3965},\n      \"radius\": 500.0\n    }\n  }\n}' -H 'Content-Type: application/json' -H \"X-Goog-Api-Key: API_KEY\n\n\" -H **\"X-Goog-FieldMask: places.displayName\"** https://places.googleapis.com/v1/places:searchNearby\n\nNote that the `X-Goog-FieldMask` header specifies that the response contains the following data fields: `places.displayName`. The [response](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places/searchNearby#response-body) is then in the form:\n\n{\u00a0 \"places\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"displayName\": {\u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"La Mar Cocina Peruana\",\u00a0 \u00a0 \u00a0 \u00a0 \"languageCode\": \"en\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"displayName\": {\u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Kokkari Estiatorio\",\u00a0 \u00a0 \u00a0 \u00a0 \"languageCode\": \"en\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"displayName\": {\u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Harborview Restaurant & Bar\",\u00a0 \u00a0 \u00a0 \u00a0 \"languageCode\": \"en\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },  \n...  \n}\n\nAdd more data types to the field mask to return additional information. For example, add `places.formattedAddress,places.types,places.websiteUri` to include the restaurant address, type, and Web address in the response:\n\ncurl -X POST -d '{\n  \"includedTypes\": [\"restaurant\"],\n  \"maxResultCount\": 10,\n  \"locationRestriction\": {\n    \"circle\": {\n      \"center\": {\n        \"latitude\": 37.7937,\n        \"longitude\": -122.3965},\n      \"radius\": 500.0\n    }\n  }\n}' -H 'Content-Type: application/json' -H \"X-Goog-Api-Key: API_KEY\n\n\" -H **\"X-Goog-FieldMask: places.displayName,places.formattedAddress,places.types,places.websiteUri\"** https://places.googleapis.com/v1/places:searchNearby\n\nThe [response](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places/searchNearby#response-body) is now in the form:\n\n{\u00a0 \"places\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"types\": [\u00a0 \u00a0 \u00a0 \u00a0 \"seafood_restaurant\",\u00a0 \u00a0 \u00a0 \u00a0 \"restaurant\",\u00a0 \u00a0 \u00a0 \u00a0 \"food\",\u00a0 \u00a0 \u00a0 \u00a0 \"point_of_interest\",\u00a0 \u00a0 \u00a0 \u00a0 \"establishment\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"formattedAddress\": \"PIER 1 1/2 The Embarcadero N, San Francisco, CA 94105, USA\",\u00a0 \u00a0 \u00a0 \"websiteUri\": \"http://lamarsf.com/\",\u00a0 \u00a0 \u00a0 \"displayName\": {\u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"La Mar Cocina Peruana\",\u00a0 \u00a0 \u00a0 \u00a0 \"languageCode\": \"en\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"types\": [\u00a0 \u00a0 \u00a0 \u00a0 \"greek_restaurant\",\u00a0 \u00a0 \u00a0 \u00a0 \"meal_takeaway\",\u00a0 \u00a0 \u00a0 \u00a0 \"restaurant\",\u00a0 \u00a0 \u00a0 \u00a0 \"food\",\u00a0 \u00a0 \u00a0 \u00a0 \"point_of_interest\",\u00a0 \u00a0 \u00a0 \u00a0 \"establishment\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"formattedAddress\": \"200 Jackson St, San Francisco, CA 94111, USA\",\u00a0 \u00a0 \u00a0 \"websiteUri\": \"https://kokkari.com/\",\u00a0 \u00a0 \u00a0 \"displayName\": {\u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Kokkari Estiatorio\",\u00a0 \u00a0 \u00a0 \u00a0 \"languageCode\": \"en\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },  \n...  \n}  \n\n### Find places of multiple types\n\nThe following example shows a Nearby Search (New) request for the display names of all convenience stores and liquor stores within a 1000-meter radius of the specified `circle`:\n\ncurl -X POST -d '{\n  **\"includedTypes\": [\"liquor_store\", \"convenience_store\"],**\n  \"maxResultCount\": 10,\n  \"locationRestriction\": {\n    \"circle\": {\n      \"center\": {\n        \"latitude\": 37.7937,\n        \"longitude\": -122.3965\n      },\n      \"radius\": 1000.0\n    }\n  }\n}' -H 'Content-Type: application/json' -H \"X-Goog-Api-Key: API_KEY\n\n\" -H \"X-Goog-FieldMask: places.displayName,places.primaryType,places.types\" https://places.googleapis.com/v1/places:searchNearby\n\nThis example adds `places.primaryType` and `places.types` to the field mask so that the response includes type information about each place, making it easier to select the appropriate place from the results.\n\n### Exclude a place type from a search\n\nThe following example shows a Nearby Search (New) request for all places of type `\"school\"`, excluding all places of type `\"primary_school\"`, ranking the results by distance:\n\ncurl -X POST -d '{\n  **\"includedTypes\": [\"school\"],\n  \"excludedTypes\": [\"primary_school\"],**\n  \"maxResultCount\": 10,\n  \"locationRestriction\": {\n    \"circle\": {\n      \"center\": {\n        \"latitude\": 37.7937,\n        \"longitude\": -122.3965\n      },\n      \"radius\": 1000.0\n    }\n  },\n  \"rankPreference\": \"DISTANCE\"\n}' -H 'Content-Type: application/json' -H \"X-Goog-Api-Key: API_KEY\n\n\" -H \"X-Goog-FieldMask: places.displayName\" https://places.googleapis.com/v1/places:searchNearby\n\n### Search for all places near an area, ranking by distance\n\nThe following example shows a Nearby Search (New) request for places near a point in downtown San Francisco. In this example, you include the `rankPreference` parameter to rank the results by distance:\n\ncurl -X POST -d '{\n  \"maxResultCount\": 10,\n  **\"rankPreference\": \"DISTANCE\",**\n  \"locationRestriction\": {\n    \"circle\": {\n      \"center\": {\n        \"latitude\": 37.7937,\n        \"longitude\": -122.3965\n      },\n      \"radius\": 1000.0\n    }\n  }\n}' -H 'Content-Type: application/json' -H \"X-Goog-Api-Key: API_KEY\n\n\" -H \"X-Goog-FieldMask: places.displayName\" https://places.googleapis.com/v1/places:\n\n\n[**Table A**](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) lists the types that are used in the following ways:\n\n- As part of a response from Place Details (New), Nearby Search (New), and Text Search (New). The request must specify at least one of the `places.types`, `places.primaryType`, or `places.primaryTypeDisplayName` fields in the field mask. The values in Table A are then used to populate those fields.\n- As part of a Nearby Search (New) request, used as the value of the `includedTypes`, `excludedTypes`, `includedPrimaryTypes`, and `excludedPrimaryTypes` parameter. The values in Table B are then used to populate those fields.\n- As part of a Text Search (New) request, used as the value of the `includedType` parameter.\n- As part of a Place Autocomplete (New) request, use as the values to the `includedPrimaryTypes` parameter.\n- As part of a Place Autocomplete (New) response.\n\n[**Table B**](https://developers.google.com/maps/documentation/places/web-service/place-types#table-b) lists additional place type values which may also be returned as part of a Place Details (New), Nearby Search (New), Text Search (New), and Place Autocomplete (New) response. The request must specify at least one of the `places.types`, `places.primaryType`, or `places.primaryTypeDisplayName` fields in the field mask. Values from Table B may NOT be used as part of a request, except as the values to the `includedPrimaryTypes` parameter for a Place Autocomplete (New) request.\n\n### Table A\n\n|   |   |\n|---|---|\n|- [Automotive](https://developers.google.com/maps/documentation/places/web-service/place-types#automotive)<br>- [Business](https://developers.google.com/maps/documentation/places/web-service/place-types#business)<br>- [Culture](https://developers.google.com/maps/documentation/places/web-service/place-types#culture)<br>- [Education](https://developers.google.com/maps/documentation/places/web-service/place-types#education)<br>- [Entertainment and Recreation](https://developers.google.com/maps/documentation/places/web-service/place-types#entertainment-and-recreation)<br>- [Finance](https://developers.google.com/maps/documentation/places/web-service/place-types#finance)<br>- [Food and Drink](https://developers.google.com/maps/documentation/places/web-service/place-types#food-and-drink)<br>- [Geographical Areas](https://developers.google.com/maps/documentation/places/web-service/place-types#geographical-areas)<br>- [Government](https://developers.google.com/maps/documentation/places/web-service/place-types#government)|- [Health and Wellness](https://developers.google.com/maps/documentation/places/web-service/place-types#health-and-wellness)<br>- [Lodging](https://developers.google.com/maps/documentation/places/web-service/place-types#lodging)<br>- [Places of Worship](https://developers.google.com/maps/documentation/places/web-service/place-types#places-of-worship)<br>- [Services](https://developers.google.com/maps/documentation/places/web-service/place-types#services)<br>- [Shopping](https://developers.google.com/maps/documentation/places/web-service/place-types#shopping)<br>- [Sports](https://developers.google.com/maps/documentation/places/web-service/place-types#sports)<br>- [Transportation](https://developers.google.com/maps/documentation/places/web-service/place-types#transportation)|\n\n|Automotive|   |\n|---|---|\n|`car_dealer`  <br>`car_rental`  <br>`car_repair`  <br>`car_wash`|`electric_vehicle_charging_station`  <br>`gas_station`  <br>`parking`  <br>`rest_stop`|\n|Business|   |\n|`farm`|\n|Culture|   |\n|`art_gallery`  <br>`museum`  <br>`performing_arts_theater`|\n|Education|   |\n|`library`  <br>`preschool`  <br>`primary_school`|`school`  <br>`secondary_school`  <br>`university`|\n|Entertainment and Recreation|   |\n|`amusement_center`  <br>`amusement_park`  <br>`aquarium`  <br>`banquet_hall`  <br>`bowling_alley`  <br>`casino`  <br>`community_center`  <br>`convention_center`  <br>`cultural_center`  <br>`dog_park`  <br>`event_venue`  <br>`hiking_area`|`historical_landmark`  <br>`marina`  <br>`movie_rental`  <br>`movie_theater`  <br>`national_park`  <br>`night_club`  <br>`park`  <br>`tourist_attraction`  <br>`visitor_center`  <br>`wedding_venue`  <br>`zoo`|\n|Finance|   |\n|`accounting`  <br>`atm`  <br>`bank`|\n|Food and Drink|   |\n|`american_restaurant`  <br>`bakery`  <br>`bar`  <br>`barbecue_restaurant`  <br>`brazilian_restaurant`  <br>`breakfast_restaurant`  <br>`brunch_restaurant`  <br>`cafe`  <br>`chinese_restaurant`  <br>`coffee_shop`  <br>`fast_food_restaurant`  <br>`french_restaurant`  <br>`greek_restaurant`  <br>`hamburger_restaurant`  <br>`ice_cream_shop`  <br>`indian_restaurant`  <br>`indonesian_restaurant`  <br>`italian_restaurant`  <br>`japanese_restaurant`  <br>`korean_restaurant`|`lebanese_restaurant`  <br>`meal_delivery`  <br>`meal_takeaway`  <br>`mediterranean_restaurant`  <br>`mexican_restaurant`  <br>`middle_eastern_restaurant`  <br>`pizza_restaurant`  <br>`ramen_restaurant`  <br>`restaurant`  <br>`sandwich_shop`  <br>`seafood_restaurant`  <br>`spanish_restaurant`  <br>`steak_house`  <br>`sushi_restaurant`  <br>`thai_restaurant`  <br>`turkish_restaurant`  <br>`vegan_restaurant`  <br>`vegetarian_restaurant`  <br>`vietnamese_restaurant`|\n|Geographical Areas|   |\n|`administrative_area_level_1`  <br>`administrative_area_level_2`  <br>`country`|`locality`  <br>`postal_code`  <br>`school_district`|\n|Government|   |\n|`city_hall`  <br>`courthouse`  <br>`embassy`  <br>`fire_station`|`local_government_office`  <br>`police`  <br>`post_office`|\n|Health and Wellness|   |\n|`dental_clinic`  <br>`dentist`  <br>`doctor`  <br>`drugstore`  <br>`hospital`|`medical_lab`  <br>`pharmacy`  <br>`physiotherapist`  <br>`spa`|\n|Lodging|   |\n|`bed_and_breakfast`  <br>`campground`  <br>`camping_cabin`  <br>`cottage`  <br>`extended_stay_hotel`  <br>`farmstay`  <br>`guest_house`|`hostel`  <br>`hotel`  <br>`lodging`  <br>`motel`  <br>`private_guest_room`  <br>`resort_hotel`  <br>`rv_park`|\n|Places of Worship|   |\n|`church`  <br>`hindu_temple`  <br>`mosque`  <br>`synagogue`|\n|Services|   |\n|`barber_shop`  <br>`beauty_salon`  <br>`cemetery`  <br>`child_care_agency`  <br>`consultant`  <br>`courier_service`  <br>`electrician`  <br>`florist`  <br>`funeral_home`  <br>`hair_care`  <br>`hair_salon`  <br>`insurance_agency`|`laundry`  <br>`lawyer`  <br>`locksmith`  <br>`moving_company`  <br>`painter`  <br>`plumber`  <br>`real_estate_agency`  <br>`roofing_contractor`  <br>`storage`  <br>`tailor`  <br>`telecommunications_service_provider`  <br>`travel_agency`  <br>`veterinary_care`|\n|Shopping|   |\n|`auto_parts_store`  <br>`bicycle_store`  <br>`book_store`  <br>`cell_phone_store`  <br>`clothing_store`  <br>`convenience_store`  <br>`department_store`  <br>`discount_store`  <br>`electronics_store`  <br>`furniture_store`  <br>`gift_shop`  <br>`grocery_store`  <br>`hardware_store`  <br>`home_goods_store`|`home_improvement_store`  <br>`jewelry_store`  <br>`liquor_store`  <br>`market`  <br>`pet_store`  <br>`shoe_store`  <br>`shopping_mall`  <br>`sporting_goods_store`  <br>`store`  <br>`supermarket`  <br>`wholesaler`|\n|Sports|   |\n|`athletic_field`  <br>`fitness_center`  <br>`golf_course`  <br>`gym`  <br>`playground`|`ski_resort`  <br>`sports_club`  <br>`sports_complex`  <br>`stadium`  <br>`swimming_pool`|\n|Transportation|   |\n|`airport`  <br>`bus_station`  <br>`bus_stop`  <br>`ferry_terminal`  <br>`heliport`  <br>`light_rail_station`  <br>`park_and_ride`|`subway_station`  <br>`taxi_stand`  <br>`train_station`  <br>`transit_depot`  <br>`transit_station`  <br>`truck_stop`|\n\nBased on the above documentations act as a query generation bot. I will ask a question and you only answer with includedTypes of the request needed to do the action I need. You're only allowed to use the above endpoint and no outside endpoints. Make sure to include ALL the appropriate types for the query. The output schema should be exactly as follows: {\"includedTypes\":[each apprpriate type as a string]}\n\n\n"
}
